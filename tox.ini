[tox]
isolated_build = true
envlist = py{39,310,311,312,313},style,docs,minimal,isort,slotscheck
[testenv]
allowlist_externals =
    poetry
setenv=
    POETRY_VIRTUALENVS_CREATE=false
commands_pre=
    poetry install -n -v --no-root --extras "requests aiohttp httpx" --only test
extras=
    requests
    aiohttp
    httpx

[testenv:py310]
commands =
    pytest -v --live --cov=snug {posargs}

[testenv:minimal]
extras=
commands=
    pytest {posargs}

[testenv:style]
commands_pre=
    poetry install -n -v --no-root --extras "requests aiohttp httpx" --only linting
commands=
    black --check --diff src/ tests/
    flake8 src/ tests/

[testenv:isort]
commands_pre=
    poetry install -n -v --no-root --extras "requests aiohttp httpx" --only linting
commands=
    isort --check-only --diff src/ tests/

[testenv:slotscheck]
commands_pre=
    poetry install -n -v --no-root --extras "requests aiohttp httpx" --only linting
commands=
    slotscheck -m snug

[testenv:docs]
deps=
    -rdocs/requirements.txt
commands=
    sphinx-build -W -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" \
    --color -bhtml
    python -c 'import pathlib; print("documentation available under " \
    + (pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html").as_uri())'

[coverage:run]
branch=True
[coverage:report]
fail_under=100
exclude_lines=
    pragma: no cover
    raise NotImplementedError

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312, style, isort, slotscheck, docs
    3.13: py313
